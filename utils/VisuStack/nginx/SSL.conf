  server {
	listen 443 ssl default_server;
    #listen [::]:443 ssl http2 default_server;
    server_name           192.168.0.65;
    uwsgi_read_timeout 300s;
	
	#ssl_dhparam /etc/nginx/dh.pem;
    #ssl_dhparam                 /etc/nginx/dhparams.pem;
    ssl_certificate /etc/nginx/ssl/77.153.196.68.crt;
    ssl_certificate_key   /etc/nginx/ssl/77.153.196.68.key;
    ssl_session_cache         shared:SSL:10m;
    ssl_session_timeout       5m;
    ssl_protocols             TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers    ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA;
    ssl_prefer_server_ciphers on;
    #ssl_trusted_certificate   /etc/nginx/ssl/ca.crt;

    #location = /favicon.ico { access_log off; log_not_found off; }

 #   listen 80 default_server;
    resolver 127.0.0.11 valid=30s;

    include  /etc/nginx/mime.types;

    # Handle noisy favicon.ico messages in nginx
    #location = /favicon.ico { return 204;access_log     off;        log_not_found  off;   }

    location / {
        # checks for static file, if not found proxy to app
        proxy_pass_header X-CSRFToken;
        try_files $uri @proxy_to_app;
    }

    # kib app

	
     location ~ /kibana  {
        resolver 127.0.0.11 valid=10s;
        set $upstream http://kibanahal:5601;
        proxy_pass $upstream;
        proxy_redirect off;
        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_pass_header Authorization;
        proxy_set_header Connection "Keep-Alive";
        proxy_set_header Proxy-Connection "Keep-Alive";
   #     proxy_set_header Authorization "Basic {base64 of {username:password}}";
      }
	  
    # django app
	
     location @proxy_to_app {
        proxy_redirect     off;
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_pass http://app;
    }
  }