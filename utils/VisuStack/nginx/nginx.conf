# nginx.conf 
user  nginx;
worker_processes  1;

error_log /var/log/nginx/error.log warn;

pid        /var/run/nginx.pid;

events {
  worker_connections  1024;  ## Default: 1024, increase if you have lots of clients
}

http {
  include       /etc/nginx/mime.types;
  # fallback in case we can't determine a type
  default_type  application/octet-stream;
  real_ip_header X-Forwarded-For;
  real_ip_recursive on;
  set_real_ip_from 0.0.0.0/0;
  
  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
  '$status $body_bytes_sent "$http_referer" '
  '"$http_user_agent" "$http_x_forwarded_for"';

  log_format combined_realip $http_x_real_ip '$http_x_forwarded_for - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent"';
  access_log /var/log/nginx/access.log  main;
  access_log      /var/log/nginx/sovisu.log combined;
  access_log      /var/log/nginx/sovisu_access_realip.log combined_realip;
  sendfile        on;
  tcp_nopush     on;

  keepalive_timeout  65;

  
  
  server {
    #use 'listen 80 deferred;' for Linux
    # use 'listen 80 accept_filter=httpready;' for FreeBSD
    #listen 80;
	#listen [::]:80;
	listen [::]:80 default_server;
	server_name           sovisu;
	#listen 77.153.196.68:80;
	server_name sovisu;
    charset utf-8;
	uwsgi_read_timeout 300s;

	resolver 127.0.0.11 valid=30s;
	set $sovisu http://192.168.0.65:8080;
    include  /etc/nginx/mime.types;  
    location = /favicon.ico { access_log off; log_not_found off; }
	#return 301 https://192.168.0.65$request_uri;
	#include SSL.conf;
	location / {
        # checks for static file, if not found proxy to app
        #proxy_pass_header X-CSRFToken;
		#proxy_ssl_server_name on;
        try_files $uri @proxy_to_app;
        proxy_pass $sovisu;
    }
    listen 80;

	    # kib app
    location ~ /kibana  {
        resolver 127.0.0.11 valid=10s;
        set $upstream http://kibanasovisu:5601;
        proxy_pass $upstream;
        proxy_redirect off;
        proxy_buffering off;
        proxy_http_version 1.1;
        proxy_pass_header Authorization;
        proxy_set_header Connection "Keep-Alive";
        proxy_set_header Proxy-Connection "Keep-Alive";
   #     proxy_set_header Authorization "Basic {base64 of {username:password}}";
      }
	  
    # django app
	
    location @proxy_to_app {
        proxy_set_header   Host $host;
        proxy_set_header   X-Real-IP $remote_addr;
        proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header   X-Forwarded-Host $server_name;
        proxy_pass $sovisu;
    }
    }
	

}